/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package flogger;

import com.google.common.flogger.FluentLogger;
import com.google.common.flogger.StackSize;

import java.util.Arrays;
import java.util.concurrent.TimeUnit;
import java.util.function.LongSupplier;

public class App {
    private static final FluentLogger log = FluentLogger.forEnclosingClass();

    public static void main(String[] args) {
        // 単純にinfoレベルでログを取る場合
        log.atInfo().log("Arguments: %s", Arrays.toString(args));

        // 100回に1回ログを取る場合
        for (int i = 0; i < 1000; ++i) {
            log.atInfo().every(100).log("%d回目", i);
        }

        // 30秒に1回ログを取る場合
        LongSupplier value = System::currentTimeMillis;
        log.atInfo().atMostEvery(30, TimeUnit.SECONDS).log("現在の時間: %d", value);

        // スタックトレースを記録する場合
        log.atInfo().withStackTrace(StackSize.SMALL).log("Message");

        // エラーの記録をする場合
        try {
            runThrowableMethod();
        } catch (Exception e) {
            log.atInfo().withCause(e).log("Exception occurred!");
        }
    }

    private static void runThrowableMethod() throws Exception {
        throw new Exception();
    }
}
